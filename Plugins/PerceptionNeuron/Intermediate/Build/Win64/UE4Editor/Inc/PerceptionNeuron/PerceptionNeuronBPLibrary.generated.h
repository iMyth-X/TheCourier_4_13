// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class APerceptionNeuronController;
struct FVector;
struct FRotator;
class USkeletalMeshComponent;
struct FPerceptionNeuronBoneMapStruct;
#ifdef PERCEPTIONNEURON_PerceptionNeuronBPLibrary_generated_h
#error "PerceptionNeuronBPLibrary.generated.h already included, missing '#pragma once' in PerceptionNeuronBPLibrary.h"
#endif
#define PERCEPTIONNEURON_PerceptionNeuronBPLibrary_generated_h

#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_157_GENERATED_BODY \
	friend PERCEPTIONNEURON_API class UScriptStruct* Z_Construct_UScriptStruct_FPerceptionNeuronBoneMapStruct(); \
	PERCEPTIONNEURON_API static class UScriptStruct* StaticStruct();


#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execNeuronBoneMap) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_GET_PROPERTY(UByteProperty,Z_Param_X); \
		P_GET_PROPERTY(UByteProperty,Z_Param_Y); \
		P_GET_PROPERTY(UByteProperty,Z_Param_Z); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronBoneMap(Z_Param_Controller,Z_Param_BoneIndex,ENeuronXYZEnum(Z_Param_X),ENeuronXYZEnum(Z_Param_Y),ENeuronXYZEnum(Z_Param_Z)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronReadMotionArray) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_TARRAY_REF(FVector,Z_Param_Out_Translation); \
		P_GET_TARRAY_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_TARRAY(FVector,Z_Param_AdditionalTranslation); \
		P_GET_TARRAY(FRotator,Z_Param_AdditionalRotation); \
		P_GET_PROPERTY(UIntProperty,Z_Param_MaxBones); \
		P_GET_PROPERTY(UByteProperty,Z_Param_SkeletonType); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronReadMotionArray(Z_Param_Controller,Z_Param_Out_Translation,Z_Param_Out_Rotation,Z_Param_AdditionalTranslation,Z_Param_AdditionalRotation,Z_Param_MaxBones,ENeuronSkeletonEnum(Z_Param_SkeletonType)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronReadMotion) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_Translation); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_STRUCT(FVector,Z_Param_AdditionalTranslation); \
		P_GET_STRUCT(FRotator,Z_Param_AdditionalRotation); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_GET_PROPERTY(UByteProperty,Z_Param_SkeletonType); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronReadMotion(Z_Param_Controller,Z_Param_Out_Translation,Z_Param_Out_Rotation,Z_Param_AdditionalTranslation,Z_Param_AdditionalRotation,Z_Param_BoneIndex,ENeuronSkeletonEnum(Z_Param_SkeletonType)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronGetBVHBoneIndex) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_BVHBone); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronGetBVHBoneIndex(EPerceptionNeuronBonesEnum(Z_Param_BVHBone)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronNegateRotation) \
	{ \
		P_GET_STRUCT(FRotator,Z_Param_Rotation); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FRotator*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronNegateRotation(Z_Param_Rotation); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronGetReferencePoseLocalBoneRotation) \
	{ \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronGetReferencePoseLocalBoneRotation(Z_Param_Mesh,Z_Param_Out_Rotation,Z_Param_BoneIndex); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronGetLocalBoneLocation) \
	{ \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_Location); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronGetLocalBoneLocation(Z_Param_Mesh,Z_Param_Out_Location,Z_Param_BoneIndex); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronGetLocalBoneRotation) \
	{ \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronGetLocalBoneRotation(Z_Param_Mesh,Z_Param_Out_Rotation,Z_Param_BoneIndex); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronReadArray) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_TARRAY_REF(FVector,Z_Param_Out_Translation); \
		P_GET_TARRAY_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_TARRAY(FVector,Z_Param_AdditionalTranslation); \
		P_GET_TARRAY(FRotator,Z_Param_AdditionalRotation); \
		P_GET_TARRAY(FPerceptionNeuronBoneMapStruct,Z_Param_BoneMap); \
		P_GET_UBOOL(Z_Param_InverseForward); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronReadArray(Z_Param_Controller,Z_Param_Mesh,Z_Param_Out_Translation,Z_Param_Out_Rotation,Z_Param_AdditionalTranslation,Z_Param_AdditionalRotation,Z_Param_BoneMap,Z_Param_InverseForward); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronRead) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_Translation); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_STRUCT(FVector,Z_Param_AdditionalTranslation); \
		P_GET_STRUCT(FRotator,Z_Param_AdditionalRotation); \
		P_GET_PROPERTY(UByteProperty,Z_Param_BVHBone); \
		P_GET_PROPERTY(UNameProperty,Z_Param_CustomBoneName); \
		P_GET_UBOOL(Z_Param_InverseForward); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronRead(Z_Param_Controller,Z_Param_Mesh,Z_Param_Out_Translation,Z_Param_Out_Rotation,Z_Param_AdditionalTranslation,Z_Param_AdditionalRotation,EPerceptionNeuronBonesEnum(Z_Param_BVHBone),Z_Param_CustomBoneName,Z_Param_InverseForward); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronRewind) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronRewind(Z_Param_Controller); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronPause) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_UBOOL(Z_Param_bPause); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronPause(Z_Param_Controller,Z_Param_bPause); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronPlay) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UStrProperty,Z_Param_BVHFileName); \
		P_GET_UBOOL(Z_Param_bEndless); \
		P_GET_UBOOL(Z_Param_bReference); \
		P_GET_UBOOL(Z_Param_bDisplacement); \
		P_GET_PROPERTY(UByteProperty,Z_Param_MotionLineFormat); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronPlay(Z_Param_Controller,Z_Param_BVHFileName,Z_Param_bEndless,Z_Param_bReference,Z_Param_bDisplacement,ENeuronMotionLineFormatEnum(Z_Param_MotionLineFormat)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronDisconnect) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronDisconnect(Z_Param_Controller); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronConnect) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UStrProperty,Z_Param_HostName); \
		P_GET_PROPERTY(UIntProperty,Z_Param_Port); \
		P_GET_UBOOL(Z_Param_bReference); \
		P_GET_UBOOL(Z_Param_bDisplacement); \
		P_GET_PROPERTY(UByteProperty,Z_Param_MotionLineFormat); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronConnect(Z_Param_Controller,Z_Param_HostName,Z_Param_Port,Z_Param_bReference,Z_Param_bDisplacement,ENeuronMotionLineFormatEnum(Z_Param_MotionLineFormat)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronBoneSetOffset) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_X); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Y); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Z); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronBoneSetOffset(Z_Param_Controller,Z_Param_BoneIndex,Z_Param_X,Z_Param_Y,Z_Param_Z); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronInit) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneNumber); \
		P_GET_PROPERTY(UByteProperty,Z_Param_RotationOrder); \
		P_GET_PROPERTY(UByteProperty,Z_Param_XPositionChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_YPositionChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_ZPositionChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_XRotationChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_YRotationChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_ZRotationChannel); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronInit(Z_Param_Controller,Z_Param_BoneNumber,ENeuronRotOrderEnum(Z_Param_RotationOrder),ENeuronChannelNumberEnum(Z_Param_XPositionChannel),ENeuronChannelNumberEnum(Z_Param_YPositionChannel),ENeuronChannelNumberEnum(Z_Param_ZPositionChannel),ENeuronChannelNumberEnum(Z_Param_XRotationChannel),ENeuronChannelNumberEnum(Z_Param_YRotationChannel),ENeuronChannelNumberEnum(Z_Param_ZRotationChannel)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronInitFile) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UStrProperty,Z_Param_BVHFileName); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronInitFile(Z_Param_Controller,Z_Param_BVHFileName); \
		P_NATIVE_END; \
	}


#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execNeuronBoneMap) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_GET_PROPERTY(UByteProperty,Z_Param_X); \
		P_GET_PROPERTY(UByteProperty,Z_Param_Y); \
		P_GET_PROPERTY(UByteProperty,Z_Param_Z); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronBoneMap(Z_Param_Controller,Z_Param_BoneIndex,ENeuronXYZEnum(Z_Param_X),ENeuronXYZEnum(Z_Param_Y),ENeuronXYZEnum(Z_Param_Z)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronReadMotionArray) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_TARRAY_REF(FVector,Z_Param_Out_Translation); \
		P_GET_TARRAY_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_TARRAY(FVector,Z_Param_AdditionalTranslation); \
		P_GET_TARRAY(FRotator,Z_Param_AdditionalRotation); \
		P_GET_PROPERTY(UIntProperty,Z_Param_MaxBones); \
		P_GET_PROPERTY(UByteProperty,Z_Param_SkeletonType); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronReadMotionArray(Z_Param_Controller,Z_Param_Out_Translation,Z_Param_Out_Rotation,Z_Param_AdditionalTranslation,Z_Param_AdditionalRotation,Z_Param_MaxBones,ENeuronSkeletonEnum(Z_Param_SkeletonType)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronReadMotion) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_Translation); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_STRUCT(FVector,Z_Param_AdditionalTranslation); \
		P_GET_STRUCT(FRotator,Z_Param_AdditionalRotation); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_GET_PROPERTY(UByteProperty,Z_Param_SkeletonType); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronReadMotion(Z_Param_Controller,Z_Param_Out_Translation,Z_Param_Out_Rotation,Z_Param_AdditionalTranslation,Z_Param_AdditionalRotation,Z_Param_BoneIndex,ENeuronSkeletonEnum(Z_Param_SkeletonType)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronGetBVHBoneIndex) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_BVHBone); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(int32*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronGetBVHBoneIndex(EPerceptionNeuronBonesEnum(Z_Param_BVHBone)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronNegateRotation) \
	{ \
		P_GET_STRUCT(FRotator,Z_Param_Rotation); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(FRotator*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronNegateRotation(Z_Param_Rotation); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronGetReferencePoseLocalBoneRotation) \
	{ \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronGetReferencePoseLocalBoneRotation(Z_Param_Mesh,Z_Param_Out_Rotation,Z_Param_BoneIndex); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronGetLocalBoneLocation) \
	{ \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_Location); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronGetLocalBoneLocation(Z_Param_Mesh,Z_Param_Out_Location,Z_Param_BoneIndex); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronGetLocalBoneRotation) \
	{ \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronGetLocalBoneRotation(Z_Param_Mesh,Z_Param_Out_Rotation,Z_Param_BoneIndex); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronReadArray) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_TARRAY_REF(FVector,Z_Param_Out_Translation); \
		P_GET_TARRAY_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_TARRAY(FVector,Z_Param_AdditionalTranslation); \
		P_GET_TARRAY(FRotator,Z_Param_AdditionalRotation); \
		P_GET_TARRAY(FPerceptionNeuronBoneMapStruct,Z_Param_BoneMap); \
		P_GET_UBOOL(Z_Param_InverseForward); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronReadArray(Z_Param_Controller,Z_Param_Mesh,Z_Param_Out_Translation,Z_Param_Out_Rotation,Z_Param_AdditionalTranslation,Z_Param_AdditionalRotation,Z_Param_BoneMap,Z_Param_InverseForward); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronRead) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_OBJECT(USkeletalMeshComponent,Z_Param_Mesh); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_Translation); \
		P_GET_STRUCT_REF(FRotator,Z_Param_Out_Rotation); \
		P_GET_STRUCT(FVector,Z_Param_AdditionalTranslation); \
		P_GET_STRUCT(FRotator,Z_Param_AdditionalRotation); \
		P_GET_PROPERTY(UByteProperty,Z_Param_BVHBone); \
		P_GET_PROPERTY(UNameProperty,Z_Param_CustomBoneName); \
		P_GET_UBOOL(Z_Param_InverseForward); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronRead(Z_Param_Controller,Z_Param_Mesh,Z_Param_Out_Translation,Z_Param_Out_Rotation,Z_Param_AdditionalTranslation,Z_Param_AdditionalRotation,EPerceptionNeuronBonesEnum(Z_Param_BVHBone),Z_Param_CustomBoneName,Z_Param_InverseForward); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronRewind) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronRewind(Z_Param_Controller); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronPause) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_UBOOL(Z_Param_bPause); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronPause(Z_Param_Controller,Z_Param_bPause); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronPlay) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UStrProperty,Z_Param_BVHFileName); \
		P_GET_UBOOL(Z_Param_bEndless); \
		P_GET_UBOOL(Z_Param_bReference); \
		P_GET_UBOOL(Z_Param_bDisplacement); \
		P_GET_PROPERTY(UByteProperty,Z_Param_MotionLineFormat); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronPlay(Z_Param_Controller,Z_Param_BVHFileName,Z_Param_bEndless,Z_Param_bReference,Z_Param_bDisplacement,ENeuronMotionLineFormatEnum(Z_Param_MotionLineFormat)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronDisconnect) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronDisconnect(Z_Param_Controller); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronConnect) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UStrProperty,Z_Param_HostName); \
		P_GET_PROPERTY(UIntProperty,Z_Param_Port); \
		P_GET_UBOOL(Z_Param_bReference); \
		P_GET_UBOOL(Z_Param_bDisplacement); \
		P_GET_PROPERTY(UByteProperty,Z_Param_MotionLineFormat); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronConnect(Z_Param_Controller,Z_Param_HostName,Z_Param_Port,Z_Param_bReference,Z_Param_bDisplacement,ENeuronMotionLineFormatEnum(Z_Param_MotionLineFormat)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronBoneSetOffset) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneIndex); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_X); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Y); \
		P_GET_PROPERTY(UFloatProperty,Z_Param_Z); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronBoneSetOffset(Z_Param_Controller,Z_Param_BoneIndex,Z_Param_X,Z_Param_Y,Z_Param_Z); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronInit) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UIntProperty,Z_Param_BoneNumber); \
		P_GET_PROPERTY(UByteProperty,Z_Param_RotationOrder); \
		P_GET_PROPERTY(UByteProperty,Z_Param_XPositionChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_YPositionChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_ZPositionChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_XRotationChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_YRotationChannel); \
		P_GET_PROPERTY(UByteProperty,Z_Param_ZRotationChannel); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronInit(Z_Param_Controller,Z_Param_BoneNumber,ENeuronRotOrderEnum(Z_Param_RotationOrder),ENeuronChannelNumberEnum(Z_Param_XPositionChannel),ENeuronChannelNumberEnum(Z_Param_YPositionChannel),ENeuronChannelNumberEnum(Z_Param_ZPositionChannel),ENeuronChannelNumberEnum(Z_Param_XRotationChannel),ENeuronChannelNumberEnum(Z_Param_YRotationChannel),ENeuronChannelNumberEnum(Z_Param_ZRotationChannel)); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execNeuronInitFile) \
	{ \
		P_GET_OBJECT(APerceptionNeuronController,Z_Param_Controller); \
		P_GET_PROPERTY(UStrProperty,Z_Param_BVHFileName); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=UPerceptionNeuronBPLibrary::NeuronInitFile(Z_Param_Controller,Z_Param_BVHFileName); \
		P_NATIVE_END; \
	}


#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUPerceptionNeuronBPLibrary(); \
	friend PERCEPTIONNEURON_API class UClass* Z_Construct_UClass_UPerceptionNeuronBPLibrary(); \
	public: \
	DECLARE_CLASS(UPerceptionNeuronBPLibrary, UBlueprintFunctionLibrary, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/PerceptionNeuron"), NO_API) \
	DECLARE_SERIALIZER(UPerceptionNeuronBPLibrary) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_INCLASS \
	private: \
	static void StaticRegisterNativesUPerceptionNeuronBPLibrary(); \
	friend PERCEPTIONNEURON_API class UClass* Z_Construct_UClass_UPerceptionNeuronBPLibrary(); \
	public: \
	DECLARE_CLASS(UPerceptionNeuronBPLibrary, UBlueprintFunctionLibrary, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/PerceptionNeuron"), NO_API) \
	DECLARE_SERIALIZER(UPerceptionNeuronBPLibrary) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UPerceptionNeuronBPLibrary(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UPerceptionNeuronBPLibrary) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UPerceptionNeuronBPLibrary); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UPerceptionNeuronBPLibrary); \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API UPerceptionNeuronBPLibrary(UPerceptionNeuronBPLibrary&&); \
	NO_API UPerceptionNeuronBPLibrary(const UPerceptionNeuronBPLibrary&); \
public:


#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UPerceptionNeuronBPLibrary(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	NO_API UPerceptionNeuronBPLibrary(UPerceptionNeuronBPLibrary&&); \
	NO_API UPerceptionNeuronBPLibrary(const UPerceptionNeuronBPLibrary&); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UPerceptionNeuronBPLibrary); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UPerceptionNeuronBPLibrary); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UPerceptionNeuronBPLibrary)


#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_165_PROLOG
#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_RPC_WRAPPERS \
	TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_INCLASS \
	TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_RPC_WRAPPERS_NO_PURE_DECLS \
	TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_INCLASS_NO_PURE_DECLS \
	TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h_168_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class PerceptionNeuronBPLibrary."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID TheCourier_4_13_Plugins_PerceptionNeuron_Source_PerceptionNeuron_Public_PerceptionNeuronBPLibrary_h


#define FOREACH_ENUM_EPERCEPTIONNEURONBONESENUM(op) \
	op(EPerceptionNeuronBonesEnum::VE_Hips) \
	op(EPerceptionNeuronBonesEnum::VE_RightUpLeg) \
	op(EPerceptionNeuronBonesEnum::VE_RightLeg) \
	op(EPerceptionNeuronBonesEnum::VE_RightFoot) \
	op(EPerceptionNeuronBonesEnum::VE_LeftUpLeg) \
	op(EPerceptionNeuronBonesEnum::VE_LeftLeg) \
	op(EPerceptionNeuronBonesEnum::VE_LeftFoot) \
	op(EPerceptionNeuronBonesEnum::VE_Spine) \
	op(EPerceptionNeuronBonesEnum::VE_Spine1) \
	op(EPerceptionNeuronBonesEnum::VE_Spine2) \
	op(EPerceptionNeuronBonesEnum::VE_Spine3) \
	op(EPerceptionNeuronBonesEnum::VE_Neck) \
	op(EPerceptionNeuronBonesEnum::VE_Head) \
	op(EPerceptionNeuronBonesEnum::VE_RightShoulder) \
	op(EPerceptionNeuronBonesEnum::VE_RightArm) \
	op(EPerceptionNeuronBonesEnum::VE_RightForeArm) \
	op(EPerceptionNeuronBonesEnum::VE_RightHand) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandThumb1) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandThumb2) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandThumb3) \
	op(EPerceptionNeuronBonesEnum::VE_RightInHandIndex) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandIndex1) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandIndex2) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandIndex3) \
	op(EPerceptionNeuronBonesEnum::VE_RightInHandMiddle) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandMiddle1) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandMiddle2) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandMiddle3) \
	op(EPerceptionNeuronBonesEnum::VE_RightInHandRing) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandRing1) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandRing2) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandRing3) \
	op(EPerceptionNeuronBonesEnum::VE_RightInHandPinky) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandPinky1) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandPinky2) \
	op(EPerceptionNeuronBonesEnum::VE_RightHandPinky3) \
	op(EPerceptionNeuronBonesEnum::VE_LeftShoulder) \
	op(EPerceptionNeuronBonesEnum::VE_LeftArm) \
	op(EPerceptionNeuronBonesEnum::VE_LeftForeArm) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHand) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandThumb1) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandThumb2) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandThumb3) \
	op(EPerceptionNeuronBonesEnum::VE_LeftInHandIndex) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandIndex1) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandIndex2) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandIndex3) \
	op(EPerceptionNeuronBonesEnum::VE_LeftInHandMiddle) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandMiddle1) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandMiddle2) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandMiddle3) \
	op(EPerceptionNeuronBonesEnum::VE_LeftInHandRing) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandRing1) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandRing2) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandRing3) \
	op(EPerceptionNeuronBonesEnum::VE_LeftInHandPinky) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandPinky1) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandPinky2) \
	op(EPerceptionNeuronBonesEnum::VE_LeftHandPinky3) 
#define FOREACH_ENUM_ENEURONCHANNELNUMBERENUM(op) \
	op(ENeuronChannelNumberEnum::VE_0) \
	op(ENeuronChannelNumberEnum::VE_1) \
	op(ENeuronChannelNumberEnum::VE_2) \
	op(ENeuronChannelNumberEnum::VE_3) \
	op(ENeuronChannelNumberEnum::VE_4) \
	op(ENeuronChannelNumberEnum::VE_5) 
#define FOREACH_ENUM_ENEURONROTORDERENUM(op) \
	op(ENeuronRotOrderEnum::VE_XYZ) \
	op(ENeuronRotOrderEnum::VE_XZY) \
	op(ENeuronRotOrderEnum::VE_YXZ) \
	op(ENeuronRotOrderEnum::VE_YZX) \
	op(ENeuronRotOrderEnum::VE_ZXY) \
	op(ENeuronRotOrderEnum::VE_ZYX) 
#define FOREACH_ENUM_ENEURONXYZENUM(op) \
	op(ENeuronXYZEnum::VE_X) \
	op(ENeuronXYZEnum::VE_Y) \
	op(ENeuronXYZEnum::VE_Z) \
	op(ENeuronXYZEnum::VE_NX) \
	op(ENeuronXYZEnum::VE_NY) \
	op(ENeuronXYZEnum::VE_NZ) 
#define FOREACH_ENUM_ENEURONMOTIONLINEFORMATENUM(op) \
	op(ENeuronMotionLineFormatEnum::VE_Standard) \
	op(ENeuronMotionLineFormatEnum::VE_Neuron) 
#define FOREACH_ENUM_ENEURONSKELETONENUM(op) \
	op(ENeuronSkeletonEnum::VE_None) \
	op(ENeuronSkeletonEnum::VE_Neuron) \
	op(ENeuronSkeletonEnum::VE_TPP_Hero) \
	op(ENeuronSkeletonEnum::VE_Mannequin) \
	op(ENeuronSkeletonEnum::VE_Map) \
	op(ENeuronSkeletonEnum::VE_UE4) 
PRAGMA_ENABLE_DEPRECATION_WARNINGS
